	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")

	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

	local isTeleportingLoopActive = false
	local currentTargetCharacter = nil
	local teleportLoopConnection = nil

	local followgui = Instance.new("ScreenGui")
	followgui.Name = "FollowGui"
	followgui.ResetOnSpawn = false
	followgui.Parent = PlayerGui

	local followframe = Instance.new("Frame")
	followframe.Name = "FollowFrame"
	followframe.Size = UDim2.new(0, 300, 0, 120)
	followframe.Position = UDim2.new(0.5, -150, 0.5, -60)
	followframe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	followframe.BorderSizePixel = 1
	followframe.BorderColor3 = Color3.fromRGB(80, 80, 80)
	followframe.Parent = followgui
	followframe.Active = true
	followframe.Draggable = true

	local followinput = Instance.new("TextBox")
	followinput.Name = "FollowInput"
	followinput.Size = UDim2.new(0.9, 0, 0, 30)
	followinput.Position = UDim2.new(0.05, 0, 0.2, 0)
	followinput.PlaceholderText = "Enter username to teleport to"
	followinput.TextColor3 = Color3.fromRGB(220, 220, 220)
	followinput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	followinput.BorderSizePixel = 0
	followinput.ClearTextOnFocus = true
	followinput.TextScaled = false
	followinput.Font = Enum.Font.SourceSans
	followinput.TextSize = 14
	followinput.Parent = followframe
	followinput.Text = "IdkSlapBattlesTpGui"

	local followtoggle = Instance.new("TextButton")
	followtoggle.Name = "FollowToggle"
	followtoggle.Size = UDim2.new(0.9, 0, 0, 30)
	followtoggle.Position = UDim2.new(0.05, 0, 0.6, 0)
	followtoggle.Text = "Tp: OFF"
	followtoggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	followtoggle.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
	followtoggle.BorderSizePixel = 0
	followtoggle.TextScaled = false
	followtoggle.Font = Enum.Font.SourceSansBold
	followtoggle.TextSize = 16
	followtoggle.Parent = followframe

	local function stopTeleportLoop()
		if not isTeleportingLoopActive and not teleportLoopConnection then
			if followtoggle.Text ~= "Tp: OFF" then
				followtoggle.Text = "Tp: OFF"
			end
			return
		end

		isTeleportingLoopActive = false
		if teleportLoopConnection then
			teleportLoopConnection:Disconnect()
			teleportLoopConnection = nil
		end
		
		followtoggle.Text = "Tp: OFF"
		currentTargetCharacter = nil
	end

	followtoggle.MouseButton1Click:Connect(function()
		if isTeleportingLoopActive then
			stopTeleportLoop()
		else
			local usernameToFollow = followinput.Text
			if usernameToFollow == "" then
				return
			end

			local targetPlayer = Players:FindFirstChild(usernameToFollow)

			if targetPlayer and targetPlayer ~= LocalPlayer then
				local targetChar = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
				
				if targetChar and targetChar.Parent then
					local localChar = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
					if not (localChar and localChar.Parent) then
						followinput.Text = ""
						return
					end

					local targetHRP = targetChar:FindFirstChild("HumanoidRootPart")
					local localHRP = localChar:FindFirstChild("HumanoidRootPart")

					if not targetHRP then
						followinput.Text = ""
						return
					end
					if not localHRP then
						followinput.Text = ""
						return
					end
					
					localChar:PivotTo(targetHRP.CFrame)

					currentTargetCharacter = targetChar
					isTeleportingLoopActive = true
					followtoggle.Text = "Tp: ON"

					if teleportLoopConnection then
						teleportLoopConnection:Disconnect()
						teleportLoopConnection = nil
					end

					teleportLoopConnection = RunService.Heartbeat:Connect(function()
						if not isTeleportingLoopActive then
							if teleportLoopConnection then
								teleportLoopConnection:Disconnect()
								teleportLoopConnection = nil
							end
							return
						end

						local currentLocalCharacter = LocalPlayer.Character
						local currentTargetHRP = currentTargetCharacter and currentTargetCharacter:FindFirstChild("HumanoidRootPart")
						local currentTargetHumanoid = currentTargetCharacter and currentTargetCharacter:FindFirstChildOfClass("Humanoid")

						if not currentLocalCharacter or not currentLocalCharacter.Parent then
							stopTeleportLoop()
							return
						end
						
						local currentLocalHRP = currentLocalCharacter:FindFirstChild("HumanoidRootPart")
						if not currentLocalHRP then
							stopTeleportLoop()
							return
						end

						if not (currentTargetCharacter and currentTargetCharacter.Parent and currentTargetHRP and currentTargetHumanoid and currentTargetHumanoid.Health > 0) then
							stopTeleportLoop()
							return
						end
						
						currentLocalCharacter:PivotTo(currentTargetHRP.CFrame)
					end)
				else
					followinput.Text = ""
				end
			else
				followinput.Text = ""
			end
		end
	end)

	followgui.Destroying:Connect(function()
		if teleportLoopConnection then
			teleportLoopConnection:Disconnect()
			teleportLoopConnection = nil
		end
		isTeleportingLoopActive = false
		currentTargetCharacter = nil
	end)
